Need a "place" entity and a table go with it
Fields on this will be:
 - ID (self-generated)
 - PlanetID (ties it to a Planet from the API)
 - Name
 - Description
 - HandicapAccessible
 - ImperialOnly
 - DateRegistered

Databse table and columns:
Table=touristspot
Columns=   id
	planet_id VARCHAR(25)
	name VARCHAR(150)
	description VARCHAR(500)
	handicap VARCHAR(25)
	imperial VARCHAR(25)
	date_registered  datetime

Touristspot entity fields:
	planetID
	name
	description
	handicapAccess
	imperialOnly
	dateRegistered


This will be a freestanding table containing places of interest on all planets
The ID of this table will be stored in the User's POI table

Will also need a key for all of the tables - I think I need more desciptive labels on each
 and different buttons. Also, need some Admin ability (such as deleting Users)


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
This code was removed from the index.jsp, later added to logout.jsp:

<%@ page contentType="text/html;charset=UTF-8" language="java" %>
<%
    session = request.getSession(false);
    if (session!=null)
    {
        session.invalidate();
    }
%>


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Login screen:
 - user can log in
 - can go create a new login
 - can reset fields

Index (Main screen)
 - Can go to conduct a new search (Search1)
 - Can review their saved trips (Usertrip)
 - Read About the application
 - log out of the application

Search1
 - Provide list of planets, retrieved from API
 - User selects a planet, we go to Search2

Search2
 - Reads database (my own) to find POIs on that planet
 - Lists out all POIs
 - Also has button to add POI myself
 - Each item in list will have the option to save it to my trip
 - Adding a POI will refresh the list to include the new item

AddPOI
 - Will have all fields needed to add a POI

Usertrip
 - Read database table usertrips and displays results
